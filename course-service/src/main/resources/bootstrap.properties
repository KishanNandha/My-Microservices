server.port=8000
# This is most important for naming server
spring.application.name=course-service

#For Spring cloud config
spring.profiles.active = default
spring.cloud.config.uri=http://localhost:8888

#This is used to specify list of servers available for student service
#We no longer need this list as instances of service will be managed by naming server(eureka)
#student-service.ribbon.listOfServers=localhost:8001,localhost:8002

#For Connecting Microservices with Eureka Naming Server
eureka.client.service-url.default-zone=http://localhost:8761/eureka
#The eureka.client.registerWithEureka attribute tells the service to register with a Eureka service when the Spring Boot Eureka application starts.
eureka.client.register-with-eureka=true
#The eureka.client .fetchRegistry attribute is set to true so that when the Eureka service starts, it tries to cache its registry information locally.
eureka.client.fetch-registry=true

#This is used to enalbe hystrix with feign
feign.hystrix.enabled=true

#stream.bindings is the start of the configuration needed for your service to publish to a Spring Cloud Stream message broke.
#output is the name of your channel and maps to the Source.output() channel 
#studentChangeTopic is the name of the message queue (or topic) you\u2019re going to write messages to.
cloud.stream.bindings.output.destination= studentChangeTopic
#The content-type gives a hint to Spring Cloud Stream of what type of message is going to be sent and received (in this case JSON).
cloud.stream.bindings.output.content-type= application/json

cloud.stream.bindings.output.group=courseGrouping

#The zknodes and brokers property tells Spring Cloud Stream the network location of your Kafka and ZooKeeper.
#The stream.bindings.kafka property tells Spring you're going to use Kafka as the message bus in the service (you could have used RabbitMQ as an alternative)
cloud.stream.kafka.binder.zkNodes= localhost:2181
cloud.stream.kafka.binder.brokers= localhost:9092

#Setting up redis server details
spring.redis.port=6379
spring.redis.password=password
spring.redis.host=localhost

#Other properties moved to config server